name: Publish Beta to NPM

on:
    workflow_dispatch:
        inputs:
            confirm_publish:
                description: 'Type "PUBLISH" to confirm publishing to NPM'
                required: true
                type: string

concurrency:
    group: publish-beta-npm-${{ github.ref }}
    cancel-in-progress: true

jobs:
    publish-beta:
        name: Publish Beta Version to NPM
        runs-on: ubuntu-latest
        environment: npm
        if: github.ref == 'refs/heads/staging' && github.event.inputs.confirm_publish == 'PUBLISH'

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js 22 and pnpm
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: 'https://registry.npmjs.org'

            - name: Enable corepack & install deps
              run: |
                  corepack enable
                  pnpm install --frozen-lockfile

            - name: Verify Beta Version
              id: verify_version
              run: |
                  cd packages/blend
                  CURRENT_VERSION=$(node -p "require('./package.json').version")

                  if [[ "$CURRENT_VERSION" != *"-beta" ]]; then
                    echo "ERROR: Current version ($CURRENT_VERSION) is not a beta version!"
                    echo "This workflow should only be used to publish beta versions."
                    exit 1
                  fi

                  echo "Verified beta version: $CURRENT_VERSION"
                  echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

            - name: Build Package
              run: pnpm --filter @juspay/blend-design-system build

            - name: Verify NPM Token
              run: |
                  if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
                    echo "NPM_TOKEN secret is not set!"
                    exit 1
                  else
                    echo "NPM_TOKEN secret is configured"
                  fi

                  echo "Testing NPM authentication..."
                  npm whoami || echo "NPM authentication test failed, but continuing..."
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Check if Version Already Published
              id: check_published
              run: |
                  cd packages/blend
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  VERSION="${{ steps.verify_version.outputs.version }}"

                  echo "Checking if $PACKAGE_NAME@$VERSION is already published..."

                  if npm view "$PACKAGE_NAME@$VERSION" version 2>/dev/null; then
                    echo "already_published=true" >> $GITHUB_OUTPUT
                    echo "Version $VERSION already exists on NPM"
                  else
                    echo "already_published=false" >> $GITHUB_OUTPUT
                    echo "Version $VERSION is not yet published"
                  fi

            - name: Publish Beta to NPM
              if: steps.check_published.outputs.already_published != 'true'
              run: |
                  cd packages/blend
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  VERSION="${{ steps.verify_version.outputs.version }}"

                  echo "Publishing $PACKAGE_NAME@$VERSION to NPM with beta tag"
                  npm publish --access public --tag beta
                  echo "Successfully published $PACKAGE_NAME@$VERSION to NPM with beta tag"
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Calculate Stable Version
              if: steps.check_published.outputs.already_published != 'true'
              id: stable_version
              run: |
                  BETA_VERSION="${{ steps.verify_version.outputs.version }}"
                  STABLE_VERSION="${BETA_VERSION%-beta}"
                  echo "stable_version=$STABLE_VERSION" >> $GITHUB_OUTPUT
                  echo "Stable version will be: $STABLE_VERSION"

            - name: Create Success Summary
              if: steps.check_published.outputs.already_published != 'true'
              run: |
                  echo "## 🎉 Beta Release Published Successfully!" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Package**: \`@juspay/blend-design-system\`" >> $GITHUB_STEP_SUMMARY
                  echo "**Version**: \`${{ steps.verify_version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "**NPM Tag**: \`beta\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Installation" >> $GITHUB_STEP_SUMMARY
                  echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
                  echo "npm install @juspay/blend-design-system@beta" >> $GITHUB_STEP_SUMMARY
                  echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ Beta version is now live on NPM" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ GitHub beta release is available" >> $GITHUB_STEP_SUMMARY
                  echo "- 🔄 Test the beta version thoroughly" >> $GITHUB_STEP_SUMMARY
                  echo "- 🔄 When ready, promote to stable using 'Create Stable Release' workflow" >> $GITHUB_STEP_SUMMARY

            - name: Verify NPM Package After Publish
              if: steps.check_published.outputs.already_published != 'true'
              run: |
                  cd packages/blend
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  VERSION="${{ steps.verify_version.outputs.version }}"

                  echo "Verifying published beta package..."
                  sleep 10  # Wait for NPM to propagate

                  PUBLISHED_VERSION=$(npm view "$PACKAGE_NAME@beta" version 2>/dev/null || echo "")
                  if [[ "$PUBLISHED_VERSION" == "$VERSION" ]]; then
                    echo "✅ Successfully verified: $PACKAGE_NAME@$VERSION is live on NPM with beta tag"
                  else
                    echo "⚠️  Warning: Expected $VERSION but NPM shows $PUBLISHED_VERSION for beta tag"
                    echo "This might be due to NPM propagation delay"
                  fi

                  # Also check if we can download and list the package
                  echo "📦 Testing package download..."
                  npm view "$PACKAGE_NAME@beta" --json > /tmp/package-info.json || echo "Could not download package info"

                  if [[ -f /tmp/package-info.json ]]; then
                    echo "✅ Package info downloaded successfully"
                    echo "📋 Package details:"
                    cat /tmp/package-info.json | jq -r '.name, .version, .description' 2>/dev/null || echo "Basic package info verified"
                  fi

            - name: Skip Publishing (Already Published)
              if: steps.check_published.outputs.already_published == 'true'
              run: |
                  echo "Version ${{ steps.verify_version.outputs.version }} is already published on NPM"
                  echo "Skipping publish step"
