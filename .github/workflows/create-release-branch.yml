name: Create Release Branch

on:
    workflow_dispatch:
        inputs:
            source_branch:
                description: 'Source branch to create release branch from'
                required: true
                default: 'dev'
                type: choice
                options:
                    - dev
            confirm_create:
                description: 'Type "CREATE" to confirm creating release branch'
                required: true
                type: string

concurrency:
    group: create-release-branch-${{ github.ref }}
    cancel-in-progress: true

jobs:
    create-release-branch:
        name: Create Release Branch from Dev
        runs-on: ubuntu-latest
        if: github.event.inputs.confirm_create == 'CREATE'

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}
                  ref: ${{ github.event.inputs.source_branch }}

            - name: Setup Git
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

            - name: Check if Release Branch Exists
              id: check_branch
              run: |
                  if git ls-remote --heads origin release | grep -q "refs/heads/release"; then
                    echo "branch_exists=true" >> $GITHUB_OUTPUT
                    echo "Release branch already exists"
                  else
                    echo "branch_exists=false" >> $GITHUB_OUTPUT
                    echo "Release branch does not exist"
                  fi

            - name: Delete Existing Release Branch
              if: steps.check_branch.outputs.branch_exists == 'true'
              run: |
                  echo "Deleting existing release branch..."
                  git push origin --delete release || echo "Failed to delete remote branch, continuing..."
                  git branch -D release 2>/dev/null || echo "Local branch doesn't exist"

            - name: Create New Release Branch
              run: |
                  echo "Creating new release branch from ${{ github.event.inputs.source_branch }}..."
                  git checkout -b release
                  git push origin release
                  echo "Successfully created release branch from ${{ github.event.inputs.source_branch }}"

            - name: Create Summary
              run: |
                  echo "## ðŸŽ‰ Release Branch Created Successfully!" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Source Branch**: \`${{ github.event.inputs.source_branch }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "**New Branch**: \`release\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
                  echo "1. ðŸ”„ Switch to the \`release\` branch" >> $GITHUB_STEP_SUMMARY
                  echo "2. ðŸš€ Trigger \"Create Beta Release\" workflow from the \`release\` branch" >> $GITHUB_STEP_SUMMARY
                  echo "3. ðŸ“¦ After beta testing, trigger \"Publish Beta to NPM\" workflow" >> $GITHUB_STEP_SUMMARY
                  echo "4. âœ… When ready for stable, the workflow will create PR from \`release\` â†’ \`main\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Release Branch Strategy" >> $GITHUB_STEP_SUMMARY
                  echo "- Beta releases are created from \`release\` branch" >> $GITHUB_STEP_SUMMARY
                  echo "- This isolates beta releases from ongoing \`dev\` development" >> $GITHUB_STEP_SUMMARY
                  echo "- Stable releases are promoted from \`release\` â†’ \`main\`" >> $GITHUB_STEP_SUMMARY
                  echo "- After stable release, changes are backmerged to \`dev\`" >> $GITHUB_STEP_SUMMARY
