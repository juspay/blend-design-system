name: Publish Beta to NPM

on:
    workflow_dispatch:
        inputs:
            confirm_publish:
                description: 'Type "PUBLISH" to confirm publishing to NPM'
                required: true
                type: string

concurrency:
    group: publish-beta-npm-${{ github.ref }}
    cancel-in-progress: true

jobs:
    publish-beta:
        name: Publish Beta Version to NPM
        runs-on: ubuntu-latest
        environment: npm
        if: github.ref == 'refs/heads/staging' && github.event.inputs.confirm_publish == 'PUBLISH'

        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Node.js 22 and pnpm
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  registry-url: 'https://registry.npmjs.org'

            - name: Enable corepack & install deps
              run: |
                  corepack enable
                  pnpm install --frozen-lockfile

            - name: Verify Beta Version
              id: verify_version
              run: |
                  cd packages/blend
                  CURRENT_VERSION=$(node -p "require('./package.json').version")

                  if [[ "$CURRENT_VERSION" != *"-beta" ]]; then
                    echo "ERROR: Current version ($CURRENT_VERSION) is not a beta version!"
                    echo "This workflow should only be used to publish beta versions."
                    exit 1
                  fi

                  echo "Verified beta version: $CURRENT_VERSION"
                  echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

            - name: Build Package
              run: pnpm --filter @juspay/blend-design-system build

            - name: Verify NPM Token
              run: |
                  if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
                    echo "NPM_TOKEN secret is not set!"
                    exit 1
                  else
                    echo "NPM_TOKEN secret is configured"
                  fi

                  echo "Testing NPM authentication..."
                  npm whoami || echo "NPM authentication test failed, but continuing..."
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Check if Version Already Published
              id: check_published
              run: |
                  cd packages/blend
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  VERSION="${{ steps.verify_version.outputs.version }}"

                  echo "Checking if $PACKAGE_NAME@$VERSION is already published..."

                  if npm view "$PACKAGE_NAME@$VERSION" version 2>/dev/null; then
                    echo "already_published=true" >> $GITHUB_OUTPUT
                    echo "Version $VERSION already exists on NPM"
                  else
                    echo "already_published=false" >> $GITHUB_OUTPUT
                    echo "Version $VERSION is not yet published"
                  fi

            - name: Publish Beta to NPM
              if: steps.check_published.outputs.already_published != 'true'
              run: |
                  cd packages/blend
                  PACKAGE_NAME=$(node -p "require('./package.json').name")
                  VERSION="${{ steps.verify_version.outputs.version }}"

                  echo "Publishing $PACKAGE_NAME@$VERSION to NPM with beta tag"
                  npm publish --access public --tag beta
                  echo "Successfully published $PACKAGE_NAME@$VERSION to NPM with beta tag"
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Calculate Stable Version
              if: steps.check_published.outputs.already_published != 'true'
              id: stable_version
              run: |
                  BETA_VERSION="${{ steps.verify_version.outputs.version }}"
                  STABLE_VERSION="${BETA_VERSION%-beta}"
                  echo "stable_version=$STABLE_VERSION" >> $GITHUB_OUTPUT
                  echo "Stable version will be: $STABLE_VERSION"

            - name: Create Promotion PR to Dev First
              if: steps.check_published.outputs.already_published != 'true'
              uses: peter-evans/create-pull-request@v6
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  head: release
                  base: dev
                  branch: promote/beta-to-stable-${{ steps.verify_version.outputs.version }}
                  title: 'feat: promote beta ${{ steps.verify_version.outputs.version }} to stable'
                  body: |
                      **Promote Beta to Stable Release**

                      Beta version `${{ steps.verify_version.outputs.version }}` has been published to NPM from the staging branch and is ready for promotion to stable.

                      **Current Status:**
                      - âœ… Beta version published to NPM with `beta` tag
                      - âœ… GitHub beta release created
                      - ðŸ”„ Ready for stable release process

                      **Next Steps:**
                      1. Review and merge this PR to dev branch first
                      2. Manually create PR from dev â†’ staging and merge
                      3. Manually create PR from staging â†’ main and merge
                      4. Trigger "Create Stable Release" workflow to create stable GitHub release
                      5. Trigger "Publish Stable to NPM" workflow to publish with `latest` tag

                      **Version Info:**
                      - Beta: `${{ steps.verify_version.outputs.version }}`
                      - Stable: `${{ steps.stable_version.outputs.stable_version }}` (will be created when promoted)

                      **staging Branch Strategy:**
                      - Beta was published from `staging` branch
                      - All automatic PRs go to `dev` first, then manually merged to `staging` and `main`
                      - This prevents issues with ongoing development in `dev` branch

                      ---
                      *This PR was automatically created after successful beta NPM publish*
                  labels: |
                      automated
                      release
                      stable-promotion
                  assignees: ${{ github.actor }}

            - name: Skip Publishing (Already Published)
              if: steps.check_published.outputs.already_published == 'true'
              run: |
                  echo "Version ${{ steps.verify_version.outputs.version }} is already published on NPM"
                  echo "Skipping publish step"
